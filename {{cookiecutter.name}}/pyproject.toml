[build-system]
requires = [
{%- if cookiecutter.pattern == "jupyter" %}
    "hatchling>=1.3.1",
    "jupyterlab>=3,<4",
{%- elif cookiecutter.pattern == "jupyter" %}
    "hatchling>=1.3.1",
{%- elif cookiecutter.pattern == "cpp" %}
    "cmake",
    "cython",
    "ninja; platform_system!='Windows'",
    "numpy",
    "pybind11[global]",
    "scikit-build",
{%- elif cookiecutter.pattern == "rust" %}
    "maturin>=0.13,<0.14",
{%- else %}
    "setuptools",
    "setuptools-scm",
    "wheel",
{%- endif %}
]

{%- if cookiecutter.pattern == "jupyter" %}
build-backend = "hatchling.build"
{%- elif cookiecutter.pattern == "cpp" %}
build-backend="setuptools.build_meta"
{%- elif cookiecutter.pattern == "rust" %}
build-backend="maturin"
{%- else %}
build-backend="setuptools.build_meta"
{%- endif %}

[project]
name = "{{cookiecutter.name}}"
authors = [{name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}"}]
description={{cookiecutter.description|tojson}}
readme = "README.md"
license = { file = "LICENSE" }
version = "0.1.0"
requires-python = ">=3.7"
keywords = [
{%- if cookiecutter.pattern == "jupyter" %}
     "Jupyter",
     "JupyterLab",
     "Widgets",
     "IPython",
{%- endif %}
 ]

classifiers = [
    "Development Status :: 3 - Alpha",
{%- if cookiecutter.pattern == "rust" -%}
    "Programming Language :: Rust",
{%- endif %}
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
{%- if cookiecutter.pattern == "jupyter" -%}
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
{%- endif %}
]

dependencies = [
    "numpy",
{%- if cookiecutter.pattern == "js" %}
{%- elif cookiecutter.pattern == "jupyter" %}
    "jupyterlab>=3.5.0",
    "ipywidgets>=7.5.1",
{%- endif %}
]

[project.urls]
Repository = "{{cookiecutter.url}}"
Homepage = "{{cookiecutter.url}}"

[project.optional-dependencies]
develop = [
    "black>=23",
    "bump2version",
    "check-manifest",
    "mypy",
    "pytest",
    "pytest-cov",
    "ruff",
    "semgrep",
    "Sphinx",
    "sphinx-markdown-builder",
    "twine",
    "wheel",
]
test = [
    "pytest",
    "pytest-cov",
]

[tool.black]
color = true
line-length = 120
target-version = ['py310']
skip-string-normalization = true

[tool.check-manifest]
ignore = [
{%- if cookiecutter.pattern == "jupyter" %}
	"{{cookiecutter.module}}/labextension/**",
	"{{cookiecutter.module}}/nbextension/**",
	"js/**",
{%- elif cookiecutter.pattern == "js" %}
	"js/**",
{%- endif %}
]

{%- if cookiecutter.pattern == "cpp" %}
[tool.cibuildwheel]
test-requires = [
    "pytest>=4.3.0",
    "pytest-cov>=2.6.1",
]
{%- endif %}

{% if cookiecutter.pattern == "jupyter" %}
[tool.hatch.build]
artifacts = [
    "{{cookiecutter.module}}/nbextension/static/index.*",
    "{{cookiecutter.module}}/labextension"
]

[tool.hatch.build.targets.wheel.shared-data]
"{{cookiecutter.module}}/nbextension" = "share/jupyter/nbextensions/{{cookiecutter.module}}"
"{{cookiecutter.module}}/labextension" = "share/jupyter/labextensions/{{cookiecutter.module}}"
"{{cookiecutter.module}}/extension/install.json" = "share/jupyter/labextensions/{{cookiecutter.module}}/install.json"
"{{cookiecutter.module}}/extension/{{cookiecutter.module}}.json" = "etc/jupyter/nbconfig/notebook.d/{{cookiecutter.module}}.json"

[tool.hatch.build.targets.sdist]
exclude = [
    ".github",
    "binder",
    "docs",
]

[tool.hatch.build.hooks.jupyter-builder]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "{{cookiecutter.module}}/nbextension/static/index.js",
    "{{cookiecutter.module}}/labextension/package.json",
]
skip-if-exists = [
    "{{cookiecutter.module}}/nbextension/static/index.js",
    "{{cookiecutter.module}}/labextension/package.json",
]
dependencies = [
    "hatch-jupyter-builder>=0.5.0",
]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
path = "js"
build_cmd = "build"
npm = ["yarn"]
{%- endif %}

[tool.ruff]
line-length = 120

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.isort]
line_length = 120
known_first_party = 'pydantic'
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true

[tool.mypy]
python_version = '3.10'
# show_error_codes = true
# follow_imports = 'silent'
# strict_optional = true
# warn_redundant_casts = true
# warn_unused_ignores = true
# disallow_any_generics = true
# check_untyped_defs = true
# no_implicit_reexport = true
# warn_unused_configs = true
# disallow_subclassing_any = true
# disallow_incomplete_defs = true
# disallow_untyped_decorators = true
# disallow_untyped_calls = true

[tool.pytest.ini_options]
asyncio_mode = 'strict'
testpaths = '{{cookiecutter.module}}/tests'
